apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-maintemplate-envoy-config
data:
  envoy.yaml : |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 8090 }
    
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 443 }
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route:
                      cluster: maintemplate
                      max_grpc_timeout: 0s
                  cors:
                    allow_origin_regex:
                        - .*
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-maintemplate,grpc-timeout
                    max_age: "1728000"
                    expose_headers: custom-header-1,grpc-status,grpc-message
              http_filters:
              - name: envoy.grpc_web
              - name: envoy.cors
              - name: envoy.router
              - name: envoy.ext_authz
                config:
                  grpc_service:
                    envoy_grpc:
                      cluster_name: ext-authz
                      timeout: 0.5s
{{/*              - name: envoy.filters.http.jwt_authn*/}}
{{/*                config:*/}}
{{/*                  providers:*/}}
{{/*                    account-jwt-provider:*/}}
{{/*                      issuer: {{ printf "%s:%s" .Values.jwkIssuerUrl .Values.jwkIssuerPort }}*/}}
{{/*                      forward: true*/}}
{{/*                      forward_payload_header: x-token-payload*/}}
{{/*                      local_jwks:*/}}
{{/*                          cluster: ext-authz*/}}
{{/*                          timeout: 5s*/}}
{{/*                        cache_duration:*/}}
{{/*                          seconds: 300*/}}
{{/*                rules:*/}}
{{/*                - match:*/}}
{{/*                    prefix: "/auth"*/}}
{{/*                  requires:*/}}
{{/*                    provider_name: "account-jwt-provider"*/}}
              - name: envoy.lua
                config:
                  inline_code: |
                    function envoy_on_request(request_handle)
                      request_handle:logInfo('>>> LUA envoy_on_request Called')
                      --buf = request_handle:body()
                      --bufbytes = buf:getBytes(0, buf:length())
                      --request_handle:logInfo(bufbytes)
                    end
                    
                    function envoy_on_response(response_handle)
                      response_handle:logInfo('>>> LUA envoy_on_response Called')
                      response_handle:headers():add("X-Custom-Header-From-LUA", "bar")
                    end
                  
      clusters:        
      - name: maintemplate
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: maintemplate
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Release.Name }}-maintemplate.default.svc.cluster.local
                    port_value: 9074
      
      - name: ext-authz
        type: static
        http2_protocol_options: {}
        load_assignment:
          cluster_name: ext-authz
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Release.Name }}-authz.default.svc.cluster.local 
                    port_value: 9075
        common_lb_config:
          healthy_panic_threshold:
            value: 50.0   
        health_checks:
          - timeout: 1s
            interval: 5s
            interval_jitter: 1s
            no_traffic_interval: 5s
            unhealthy_threshold: 1
            healthy_threshold: 3
            grpc_health_check:
              service_name: "envoy.service.auth.v2alpha.Authorization"
              authority: "server.domain.com"

        connect_timeout: 0.25s
